import random
from loader import bot
from telebot.types import Message, Dict, InputMediaPhoto
from loguru import logger
from config_data.config import RAPID_ENDPOINT
from utils.api_request import request
from utils.processing_json import get_hotels, hotel_info
import database.add_to_bd
import database
import time


def print_data(message: Message, data: Dict):
    """
    –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –≤ Telegram-—á–∞—Ç, –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–æ—Ç–æ—Ä—É—é —Å–æ–±—Ä–∞–ª–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–µ—Ä–µ–¥–∞–µ–º —ç—Ç–æ –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–∏—Å–∫–∞
    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ Telegram
    :param data: Dict —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :return: None
    """
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –∞ —Ç–∞–º —É–∂–µ –≤—ã–±–µ—Ä—É —á—Ç–æ –Ω—É–∂–Ω–æ
    database.add_to_bd.add_query(data)

    logger.info(f'–í—ã–≤–æ–¥ —Å—É–º–º–∞—Ä–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. User_id: {message.chat.id}')
    text_message = ('–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: \n'
                    f'–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞: {data["date_time"]}\n'
                    f'–í–≤–µ–¥–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: {data["command"]}\n'
                    f'–í—ã –≤–≤–µ–ª–∏ –≥–æ—Ä–æ–¥: {data["input_city"]}\n'
                    f'–í—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ —Å id: {data["destination_id"]}\n'
                    f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–µ–ª–µ–π: {data["quantity_hotels"]}\n'
                    f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∑—Ä–æ—Å–ª—ã –æ—Ç 17 –ª–µ—Ç: {data["travellers_adults"]}\n'
                    f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π –¥–æ 17 –ª–µ—Ç: {data["children_count"]}\n'
                    f'–ù—É–∂–Ω—ã –ª–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏? {data["photo_need"]}\n'
                    f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {data["photo_count"]}\n'
                    f'–î–∞—Ç–∞ –∑–∞–µ–∑–¥–∞: {data["start_date"]}\n'
                    f'–î–∞—Ç–∞ –≤—ã–µ–∑–¥–∞: {data["end_date"]}\n')
    if data['sort'] == 'DISTANCE':
        bot.send_message(message.chat.id, text_message +
                         f'–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ü–µ–Ω–Ω–∏–∫: {data["price_min"]}\n'
                         f'–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ü–µ–Ω–Ω–∏–∫: {data["price_max"]}\n'
                         f'–ù–∞—á–∞–ª–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –æ—Ç —Ü–µ–Ω—Ç—Ä–∞: {data["landmark_in"]}\n'
                         f'–ö–æ–Ω–µ—Ü –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –æ—Ç —Ü–µ–Ω—Ç—Ä–∞: {data["landmark_out"]}')
    else:
        bot.send_message(message.chat.id, text_message)
    find_and_show_hotels(message, data)


def find_and_show_hotels(message: Message, data: Dict) -> None:
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –ø–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π, –∏ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–Ω –Ω–∏—Ö.
    –í—ã–≤–æ–¥ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —á–∞—Å.
    :param message: –°–æ–æ–±—â–µ–Ω–∏–µ Telegram
    :param data: Dict –¥–∞–Ω–Ω—ã–µ, —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :return: None
    """
    payload = {
        "currency": "USD",
        "eapid": 1,
        "locale": "ru_RU",
        "siteId": 300000001,
        "destination": {"regionId": data['destination_id']},
        "checkInDate": {
            "day": int(data['start_date'].day),
            "month": int(data['start_date'].month),
            "year": int(data['start_date'].year)
        },
        "checkOutDate": {
            "day": int(data['end_date'].day),
            "month": int(data['end_date'].month),
            "year": int(data['end_date'].year)
        },
        "rooms": [
            {
                "adults": int(data['travellers_adults']),
                "children": data['children_ages']
            }
        ],
        "resultsStartingIndex": 0,
        "resultsSize": 30,
        "sort": data['sort'],
        "filters": {"price": {
            "max": int(data['price_max']),
            "min": int(data['price_min'])
        }}
    }
    url = RAPID_ENDPOINT['search_hotels']
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å–µ—Ä–≤–µ—Ä—É –Ω–∞ –ø–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π
    response_hotels = request("POST", url, payload)
    logger.info(f'–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—Ç–≤–µ—Ç {response_hotels.status_code}. User_id: {message.chat.id}')
    # –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å-–∫–æ–¥ –Ω–µ 200, —Ç–æ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –±—É–¥—É—Ç –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã–º–∏.
    if response_hotels.status_code == 200:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–ª–æ–≤–∞—Ä—è —Å –æ—Ç–µ–ª—è–º–∏
        hotels = get_hotels(response_text=response_hotels.text,
                            command=data['command'],
                            landmark_in=data['landmark_in'],
                            landmark_out=data['landmark_out']
                            )
        if 'error' in hotels:
            bot.send_message(message.chat.id, hotels['error'])
            bot.send_message(message.chat.id, '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å –ø–æ–∏—Å–∫ —Å –¥—Ä—É–≥–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏')
            bot.send_message(message.chat.id, '')
        count = 0
        for hotel in hotels.values():
            # –ù—É–∂–µ–Ω –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–µ–ª–µ.
            # –¶–∏–∫–ª –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è, –ø–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç–∏–≥–Ω–µ—Ç —á–∏—Å–ª–∞ –æ—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–ø—Ä–æ—Å–∏–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
            try:
                if count < int(data['quantity_hotels']):
                    summary_payload = {
                        "currency": "USD",
                        "eapid": 1,
                        "locale": "ru_RU",
                        "siteId": 300000001,
                        "propertyId": hotel['id']
                    }
                    summary_url = RAPID_ENDPOINT['hotel_info']
                    get_summary = request("POST", summary_url, summary_payload)
                    logger.info(f'–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—Ç–≤–µ—Ç {get_summary.status_code}. User_id: {message.chat.id}')
                    if get_summary.status_code == 200:
                        summary_info = hotel_info(get_summary.text)
                        hotel_url = f"https://www.hotels.com/h{hotel['id']}.Hotel-Information"
                        total_price = round(hotel["price"] * (data["end_date"] - data["start_date"]).days, 2)
                        caption = f'üè†–ù–∞–∑–≤–∞–Ω–∏–µ: {hotel["name"]}\n' \
                                  f'üì¨–ê–¥—Ä–µ—Å: {summary_info["address"]}\n' \
                                  f'üí≤–°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –≤ —Å—É—Ç–∫–∏: {round(hotel["price"], 2)} $\n' \
                                  f'üí≤üí≤–°—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è –∑–∞ –ø–µ—Ä–∏–æ–¥: {total_price} $\n' \
                                  f'üöó–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–Ω—Ç—Ä–∞: {round(hotel["distance"], 2)} mile\n' \
                                  f'ü™ß–£–∑–Ω–∞—Ç—å –±–æ–ª–µ–µ —Ç–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—Ç–µ–ª–µ: {hotel_url}'
                        medias = []
                        links_to_images = []
                        # —Å—Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ä–∞–Ω–¥–æ–º–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∏–∑ —Å—Å—ã–ª–æ–∫ –Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏, –∏–±–æ —Ñ–æ—Ç–æ–∫ –º–Ω–æ–≥–æ, –∞ –Ω–∞–¥–æ —Ç–æ–ª—å–∫–æ 10
                        try:
                            for random_url in range(int(data['photo_count'])):
                                links_to_images.append(summary_info['images']
                                                       [random.randint(0, len(summary_info['images']) - 1)])
                        except IndexError:
                            continue

                        # –ù–µ –≤–∞–∂–Ω–æ, –Ω—É–∂–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–ª–∏ –Ω–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–∏—Ö –º—ã –ø–µ—Ä–µ–¥–∞–µ–º –≤ —Ñ—É–Ω–∫—Ü–∏—é
                        # –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                        data_to_db = {
                            hotel['id']: {
                                'name': hotel['name'], 'address': summary_info['address'], 'user_id': message.chat.id,
                                'price': hotel['price'], 'total_price_day': total_price,
                                'distance': round(hotel['distance'], 2),
                                'date_time': data['date_time'], 'images': links_to_images, 'url_hotel': hotel_url
                            }
                        }
                        database.add_to_bd.add_response(data_to_db)
                        if int(data['photo_count']) > 0:
                            # —Ñ–æ—Ä–º–∏—Ä—É–µ–º MediaGroup —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º –æ—Ç–µ–ª—è –∏ –ø–æ—Å—ã–ª–∞–µ–º –≤ —á–∞—Ç
                            for number, url in enumerate(links_to_images):
                                if number == 0:
                                    medias.append(InputMediaPhoto(media=url, caption=caption))
                                else:
                                    medias.append(InputMediaPhoto(media=url))

                            logger.info(f"–í—ã–¥–∞—é –Ω–∞–π–¥–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —á–∞—Ç. User_id: {message.chat.id}")
                            bot.send_media_group(message.chat.id, medias)

                        else:
                            # –µ—Å–ª–∏ —Ñ–æ—Ç–∫–∏ –Ω–µ –Ω—É–∂–Ω—ã, —Ç–æ –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –æ–± –æ—Ç–µ–ª–µ
                            logger.info(f"–í—ã–¥–∞—é –Ω–∞–π–¥–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —á–∞—Ç. User_id: {message.chat.id}")
                            bot.send_message(message.chat.id, caption)
                    else:
                        bot.send_message(message.chat.id, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –∫–æ–¥ –æ—à–∏–±–∫–∏: {get_summary.status_code}')
                time.sleep(1)  # –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —Å–µ—Ä–≤–µ—Ä–∞ —Ç–µ–ª–µ–≥—Ä–∞–º —É—Å–ø–µ–≤–∞–ª–∏ –¥–∞—Ç—å –æ—Ç–≤–µ—Ç –∏ –Ω–µ –≤—ã–¥–∞–≤–∞–ª–∏ –æ—à–∏–±–∫—É 429
                count += 1
            except Exception as error:
                bot.retrieve_data(message.chat.id, None)
                bot.send_message(message.chat.id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –æ–± –æ—Ç–µ–ª—è—Ö: {str(error)}\n"
                                                  f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å.")
            else:
                break
        if count < int(data['quantity_hotels']):
            bot.send_message(message.chat.id,
                             f'–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ {data["quantity_hotels"]} –æ—Ç–µ–ª–µ–π. –ù–∞–π–¥–µ–Ω–æ —Ç–æ–ª—å–∫–æ {count}.\n'
                             f'–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ—Ç–µ–ª—è.')
    else:
        bot.send_message(message.chat.id, f'–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –∫–æ–¥ –æ—à–∏–±–∫–∏: {response_hotels.status_code}')
    logger.info(f"–ü–æ–∏—Å–∫ –æ–∫–æ–Ω—á–µ–Ω. User_id: {message.chat.id}")
    bot.send_message(message.chat.id, f"–í–æ—Ç –∫–∞–∫-—Ç–æ —Ç–∞–∫.\n–ú–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –µ—â—ë –∫–∞–∫—É—é-–Ω–∏–±—É–¥—å –∫–æ–º–∞–Ω–¥—É!\n"
                                      f"–ù–∞–ø—Ä–∏–º–µ—Ä: <b>/help</b>", parse_mode="html")
    bot.set_state(message.chat.id, None)
